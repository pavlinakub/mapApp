{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MarkerService {\n  constructor(http) {\n    this.http = http;\n    //capitals: string = '/assets/data/usa-capitals.geojson';\n    this.baseURL = \"http://localhost:11111/transmitters\";\n  }\n  // makeCapitalMarkers(map: L.Map): void {\n  //   this.http.get(this.capitals).subscribe((res: any) => {\n  //     for (const c of res.features) {\n  //      const lon = c.geometry.coordinates[0];\n  //     const lat = c.geometry.coordinates[1];\n  //     const marker = L.marker([lat, lon]);\n  //     marker.addTo(map);\n  //  }\n  // });\n  // }\n  makeTransmitterMarkers(map) {\n    this.http.get(this.baseURL).subscribe(res => {\n      for (const t of res) {\n        const lon = t.tranSouradniceS;\n        const lat = t.tranSouradniceN;\n        const popupContent = t.name;\n        const marker = L.marker([lat, lon]);\n        marker.bindPopup(popupContent);\n        marker.addTo(map);\n      }\n    });\n  }\n}\nMarkerService.ɵfac = function MarkerService_Factory(t) {\n  return new (t || MarkerService)(i0.ɵɵinject(i1.HttpClient));\n};\nMarkerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MarkerService,\n  factory: MarkerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["L","MarkerService","constructor","http","baseURL","makeTransmitterMarkers","map","get","subscribe","res","t","lon","tranSouradniceS","lat","tranSouradniceN","popupContent","name","marker","bindPopup","addTo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\angular k uprave\\angular-leaflet\\src\\app\\marker.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { Transmitter } from 'src/Transmitter';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkerService {\n  //capitals: string = '/assets/data/usa-capitals.geojson';\n \n  private baseURL = \"http://localhost:11111/transmitters\";\n\n \n  \n  \n  \n  \n\n  constructor(private http: HttpClient) {\n  }\n \n \n\n // makeCapitalMarkers(map: L.Map): void {\n //   this.http.get(this.capitals).subscribe((res: any) => {\n //     for (const c of res.features) {\n  //      const lon = c.geometry.coordinates[0];\n   //     const lat = c.geometry.coordinates[1];\n   //     const marker = L.marker([lat, lon]);\n        \n   //     marker.addTo(map);\n    //  }\n   // });\n  \n // }\n makeTransmitterMarkers(map: L.Map): void {\n  this.http.get<Transmitter[]>(this.baseURL).subscribe((res: Transmitter[]) => {\n    for (const t of res) {\n      const lon = t.tranSouradniceS;\n      const lat = t.tranSouradniceN;\n      const popupContent=t.name;\n      const marker = L.marker([lat, lon]);\n       marker.bindPopup(popupContent)\n       \n      marker.addTo(map);\n    }\n  });\n}\n}\n"],"mappings":"AAEA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;AAO5B,OAAM,MAAOC,aAAa;EAWxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVxB;IAEQ,KAAAC,OAAO,GAAG,qCAAqC;EASvD;EAID;EACA;EACA;EACC;EACC;EACA;EAEA;EACC;EACD;EAEF;EACAC,sBAAsBA,CAACC,GAAU;IAChC,IAAI,CAACH,IAAI,CAACI,GAAG,CAAgB,IAAI,CAACH,OAAO,CAAC,CAACI,SAAS,CAAEC,GAAkB,IAAI;MAC1E,KAAK,MAAMC,CAAC,IAAID,GAAG,EAAE;QACnB,MAAME,GAAG,GAAGD,CAAC,CAACE,eAAe;QAC7B,MAAMC,GAAG,GAAGH,CAAC,CAACI,eAAe;QAC7B,MAAMC,YAAY,GAACL,CAAC,CAACM,IAAI;QACzB,MAAMC,MAAM,GAAGjB,CAAC,CAACiB,MAAM,CAAC,CAACJ,GAAG,EAAEF,GAAG,CAAC,CAAC;QAClCM,MAAM,CAACC,SAAS,CAACH,YAAY,CAAC;QAE/BE,MAAM,CAACE,KAAK,CAACb,GAAG,CAAC;;IAErB,CAAC,CAAC;EACJ;;AAxCaL,aAAa,C;mBAAbA,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbtB,aAAa,C;SAAbA,aAAa;EAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}