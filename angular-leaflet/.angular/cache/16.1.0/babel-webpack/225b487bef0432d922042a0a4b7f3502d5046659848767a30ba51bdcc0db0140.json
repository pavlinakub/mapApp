{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../marker.service\";\nimport * as i2 from \"./polyline.service\";\nexport class ControllerService {\n  constructor(markerService, polylineService) {\n    this.markerService = markerService;\n    this.polylineService = polylineService;\n  }\n  createControlPanel(map) {\n    const layerControl = L.control.layers().addTo(map);\n    const markers = this.markerService.makeTransmitterMarkers(map);\n    const polyline = this.polylineService.makeRoutePolyline(map);\n    layerControl.addBaseLayer(markers, \"Vysilace\");\n    layerControl.addBaseLayer(polyline, \"Dasa signalu\");\n    // Add additional layers or controls if needed\n  }\n}\n\nControllerService.ɵfac = function ControllerService_Factory(t) {\n  return new (t || ControllerService)(i0.ɵɵinject(i1.MarkerService), i0.ɵɵinject(i2.PolylineService));\n};\nControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ControllerService,\n  factory: ControllerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["L","ControllerService","constructor","markerService","polylineService","createControlPanel","map","layerControl","control","layers","addTo","markers","makeTransmitterMarkers","polyline","makeRoutePolyline","addBaseLayer","i0","ɵɵinject","i1","MarkerService","i2","PolylineService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\projekty\\policieProjekt\\angular-leaflet\\src\\app\\map\\controler.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MarkerService } from '../marker.service';\r\nimport { PolylineService } from './polyline.service';\r\nimport * as L from 'leaflet';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControllerService {\r\n  constructor(\r\n    private markerService: MarkerService,\r\n    private polylineService: PolylineService\r\n  ) {}\r\n\r\n  createControlPanel(map: L.Map): void {\r\n    const layerControl = L.control.layers().addTo(map);\r\n\r\n    const markers = this.markerService.makeTransmitterMarkers(map);\r\n    const polyline = this.polylineService.makeRoutePolyline(map);\r\n\r\n    layerControl.addBaseLayer(markers, \"Vysilace\");\r\n    layerControl.addBaseLayer(polyline, \"Dasa signalu\");\r\n\r\n    // Add additional layers or controls if needed\r\n  }\r\n}\r\n"],"mappings":"AAGA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;;AAK5B,OAAM,MAAOC,iBAAiB;EAC5BC,YACUC,aAA4B,EAC5BC,eAAgC;IADhC,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,eAAe,GAAfA,eAAe;EACtB;EAEHC,kBAAkBA,CAACC,GAAU;IAC3B,MAAMC,YAAY,GAAGP,CAAC,CAACQ,OAAO,CAACC,MAAM,EAAE,CAACC,KAAK,CAACJ,GAAG,CAAC;IAElD,MAAMK,OAAO,GAAG,IAAI,CAACR,aAAa,CAACS,sBAAsB,CAACN,GAAG,CAAC;IAC9D,MAAMO,QAAQ,GAAG,IAAI,CAACT,eAAe,CAACU,iBAAiB,CAACR,GAAG,CAAC;IAE5DC,YAAY,CAACQ,YAAY,CAACJ,OAAO,EAAE,UAAU,CAAC;IAC9CJ,YAAY,CAACQ,YAAY,CAACF,QAAQ,EAAE,cAAc,CAAC;IAEnD;EACF;;;AAhBWZ,iBAAiB,C;mBAAjBA,iBAAiB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA;AAAA;AAAjBpB,iBAAiB,C;SAAjBA,iBAAiB;EAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}