{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst iconRetinaUrl = 'assets/marker-icon-2x.png';\nconst iconUrl = 'assets/marker-icon.png';\nconst shadowUrl = 'assets/marker-shadow.png';\nconst iconDefault = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = iconDefault;\nexport class ClickService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"http://localhost:11111\";\n  }\n  makeRouteMarkers(map) {\n    const layer = L.layerGroup(); // Create a layer group to hold the markers\n    this.http.get(this.baseURL + '/route').subscribe(res => {\n      for (const t of res) {\n        const lon = t.routeSouradniceS;\n        const lat = t.routeSouradniceN;\n        const customIcon = L.icon({\n          iconRetinaUrl,\n          iconUrl,\n          iconSize: [32, 32],\n          iconAnchor: [16, 32]\n        });\n        const popupContent = this.getPopupContent(t.routTime);\n        const marker = L.circleMarker([lat, lon]).addTo(layer);\n      }\n      // Once all markers are added, return the layer group\n      return layer;\n    });\n    // Return an empty layer group as a fallback (in case the HTTP request hasn't completed yet)\n    return layer;\n  }\n  getPopupContent(time) {\n    var log;\n    if (time.getMinutes() == log.logTime.getMinutes()) {\n      return log.rssi.toString();\n    }\n    return \"Not known\";\n  }\n}\nClickService.ɵfac = function ClickService_Factory(t) {\n  return new (t || ClickService)(i0.ɵɵinject(i1.HttpClient));\n};\nClickService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClickService,\n  factory: ClickService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["L","iconRetinaUrl","iconUrl","shadowUrl","iconDefault","icon","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","Marker","prototype","options","ClickService","constructor","http","baseURL","makeRouteMarkers","map","layer","layerGroup","get","subscribe","res","t","lon","routeSouradniceS","lat","routeSouradniceN","customIcon","popupContent","getPopupContent","routTime","marker","circleMarker","addTo","time","log","getMinutes","logTime","rssi","toString","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\projekty\\policieProjekt\\angular-leaflet\\src\\app\\map\\click.service.ts"],"sourcesContent":["import * as L from 'leaflet';\r\nimport { Transmitter } from 'src/Transmitter';\r\nimport { Route } from 'src/Route';\r\nimport { LatLngExpression } from 'leaflet';\r\nimport { MarkerService } from '../marker.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Log } from 'src/Log';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nconst iconRetinaUrl = 'assets/marker-icon-2x.png';\r\nconst iconUrl = 'assets/marker-icon.png';\r\nconst shadowUrl = 'assets/marker-shadow.png';\r\nconst iconDefault = L.icon({\r\n  iconRetinaUrl,\r\n  iconUrl,\r\n  shadowUrl,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  tooltipAnchor: [16, -28],\r\n  shadowSize: [41, 41]\r\n});\r\nL.Marker.prototype.options.icon = iconDefault;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClickService {\r\n \r\n  private baseURL = \"http://localhost:11111\";\r\n\r\n  constructor(private http: HttpClient) {\r\n   \r\n  \r\n}\r\n\r\n \r\n  makeRouteMarkers(map: L.Map): L.LayerGroup {\r\n    const layer = L.layerGroup(); // Create a layer group to hold the markers\r\n  \r\n    this.http.get<Route[]>(this.baseURL+'/route').subscribe((res: Route[]) => {\r\n      for (const t of res) {\r\n        const lon = t.routeSouradniceS;\r\n        const lat = t.routeSouradniceN;\r\n        const customIcon = L.icon({\r\n          iconRetinaUrl,\r\n          iconUrl,\r\n          iconSize: [32, 32],\r\n          iconAnchor: [16, 32]\r\n        });\r\n        const popupContent = this.getPopupContent(t.routTime);\r\n        \r\n        const marker = L.circleMarker([lat, lon]).addTo(layer);\r\n     \r\n\r\n      \r\n      }\r\n  \r\n      // Once all markers are added, return the layer group\r\n      return layer;\r\n    });\r\n  \r\n    // Return an empty layer group as a fallback (in case the HTTP request hasn't completed yet)\r\n    return layer;\r\n  }\r\ngetPopupContent(time:Date) :string{\r\n  var log!: Log\r\n    if(time.getMinutes()==log.logTime.getMinutes()){\r\n      return log.rssi.toString()}\r\n      return \"Not known\"\r\n}\r\n  }\r\n\r\n  \r\n  \r\n "],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;AAW5B,MAAMC,aAAa,GAAG,2BAA2B;AACjD,MAAMC,OAAO,GAAG,wBAAwB;AACxC,MAAMC,SAAS,GAAG,0BAA0B;AAC5C,MAAMC,WAAW,GAAGJ,CAAC,CAACK,IAAI,CAAC;EACzBJ,aAAa;EACbC,OAAO;EACPC,SAAS;EACTG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACrBC,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;EACxBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;CACpB,CAAC;AACFV,CAAC,CAACW,MAAM,CAACC,SAAS,CAACC,OAAO,CAACR,IAAI,GAAGD,WAAW;AAK7C,OAAM,MAAOU,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,wBAAwB;EAK5C;EAGEC,gBAAgBA,CAACC,GAAU;IACzB,MAAMC,KAAK,GAAGpB,CAAC,CAACqB,UAAU,EAAE,CAAC,CAAC;IAE9B,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,IAAI,CAACL,OAAO,GAAC,QAAQ,CAAC,CAACM,SAAS,CAAEC,GAAY,IAAI;MACvE,KAAK,MAAMC,CAAC,IAAID,GAAG,EAAE;QACnB,MAAME,GAAG,GAAGD,CAAC,CAACE,gBAAgB;QAC9B,MAAMC,GAAG,GAAGH,CAAC,CAACI,gBAAgB;QAC9B,MAAMC,UAAU,GAAG9B,CAAC,CAACK,IAAI,CAAC;UACxBJ,aAAa;UACbC,OAAO;UACPI,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;UAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;SACpB,CAAC;QACF,MAAMwB,YAAY,GAAG,IAAI,CAACC,eAAe,CAACP,CAAC,CAACQ,QAAQ,CAAC;QAErD,MAAMC,MAAM,GAAGlC,CAAC,CAACmC,YAAY,CAAC,CAACP,GAAG,EAAEF,GAAG,CAAC,CAAC,CAACU,KAAK,CAAChB,KAAK,CAAC;;MAMxD;MACA,OAAOA,KAAK;IACd,CAAC,CAAC;IAEF;IACA,OAAOA,KAAK;EACd;EACFY,eAAeA,CAACK,IAAS;IACvB,IAAIC,GAAS;IACX,IAAGD,IAAI,CAACE,UAAU,EAAE,IAAED,GAAG,CAACE,OAAO,CAACD,UAAU,EAAE,EAAC;MAC7C,OAAOD,GAAG,CAACG,IAAI,CAACC,QAAQ,EAAE;;IAC1B,OAAO,WAAW;EACxB;;AA3Ca5B,YAAY,C;mBAAZA,YAAY,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZhC,YAAY,C;SAAZA,YAAY;EAAAiC,OAAA,EAAZjC,YAAY,CAAAkC,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}