{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MarkerService {\n  constructor(http) {\n    this.http = http;\n    this.capitals = '/assets/data/usa-capitals.geojson';\n  }\n  makeCapitalMarkers(map) {\n    this.http.get(this.capitals).subscribe(res => {\n      for (const c of res.features) {\n        const lon = c.geometry.coordinates[0];\n        const lat = c.geometry.coordinates[1];\n        const marker = L.marker([lat, lon]);\n        marker.addTo(map);\n      }\n    });\n  }\n}\nMarkerService.ɵfac = function MarkerService_Factory(t) {\n  return new (t || MarkerService)(i0.ɵɵinject(i1.HttpClient));\n};\nMarkerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MarkerService,\n  factory: MarkerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["L","MarkerService","constructor","http","capitals","makeCapitalMarkers","map","get","subscribe","res","c","features","lon","geometry","coordinates","lat","marker","addTo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\angular k uprave\\angular-leaflet\\src\\app\\marker.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkerService {\n  capitals: string = '/assets/data/usa-capitals.geojson';\n \n  \n  \n  \n\n  constructor(private http: HttpClient) {\n  }\n\n  makeCapitalMarkers(map: L.Map): void {\n    this.http.get(this.capitals).subscribe((res: any) => {\n      for (const c of res.features) {\n        const lon = c.geometry.coordinates[0];\n        const lat = c.geometry.coordinates[1];\n        const marker = L.marker([lat, lon]);\n        \n        marker.addTo(map);\n      }\n    });\n  \n  }\n \n }\n"],"mappings":"AAEA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;AAM5B,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,QAAQ,GAAW,mCAAmC;EAOtD;EAEAC,kBAAkBA,CAACC,GAAU;IAC3B,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAEC,GAAQ,IAAI;MAClD,KAAK,MAAMC,CAAC,IAAID,GAAG,CAACE,QAAQ,EAAE;QAC5B,MAAMC,GAAG,GAAGF,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;QACrC,MAAMC,GAAG,GAAGL,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;QACrC,MAAME,MAAM,GAAGhB,CAAC,CAACgB,MAAM,CAAC,CAACD,GAAG,EAAEH,GAAG,CAAC,CAAC;QAEnCI,MAAM,CAACC,KAAK,CAACX,GAAG,CAAC;;IAErB,CAAC,CAAC;EAEJ;;AArBWL,aAAa,C;mBAAbA,aAAa,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbpB,aAAa,C;SAAbA,aAAa;EAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}