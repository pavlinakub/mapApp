{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PolylineService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"http://localhost:11111/route\";\n  }\n  makeRoutePolyline(map) {\n    this.http.get(this.baseURL).subscribe(res => {\n      let path;\n      for (const t of res) {\n        const lon = t.routeSouradniceS;\n        const lat = t.routeSouradniceN;\n        path.addTo([lat, lon]);\n      }\n      path = L.polyline(path, {\n        color: 'red'\n      }).addTo(map);\n    });\n  }\n}\nPolylineService.ɵfac = function PolylineService_Factory(t) {\n  return new (t || PolylineService)(i0.ɵɵinject(i1.HttpClient));\n};\nPolylineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PolylineService,\n  factory: PolylineService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["L","PolylineService","constructor","http","baseURL","makeRoutePolyline","map","get","subscribe","res","path","t","lon","routeSouradniceS","lat","routeSouradniceN","addTo","polyline","color","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\projekty\\policieProjekt\\angular-leaflet\\src\\app\\map\\polyline.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as L from 'leaflet';\r\nimport { Transmitter } from 'src/Transmitter';\r\nimport { Route } from 'src/Route';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PolylineService {\r\n \r\n \r\n  private baseURL = \"http://localhost:11111/route\";\r\n  constructor(private http: HttpClient) {\r\n}\r\n\r\n\r\nmakeRoutePolyline(map: L.Map): void {\r\nthis.http.get<Route[]>(this.baseURL).subscribe((res: Route[]) => {\r\n    let path:any;\r\n  for (const t of res) {\r\n    const lon = t.routeSouradniceS;\r\n    const lat = t.routeSouradniceN;\r\n    path.addTo([lat, lon]);\r\n   \r\n  }\r\n    path=L.polyline(path,{color:'red'}).addTo(map);\r\n});\r\n}\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAEA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;AAO5B,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,OAAO,GAAG,8BAA8B;EAElD;EAGAC,iBAAiBA,CAACC,GAAU;IAC5B,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,OAAO,CAAC,CAACI,SAAS,CAAEC,GAAY,IAAI;MAC5D,IAAIC,IAAQ;MACd,KAAK,MAAMC,CAAC,IAAIF,GAAG,EAAE;QACnB,MAAMG,GAAG,GAAGD,CAAC,CAACE,gBAAgB;QAC9B,MAAMC,GAAG,GAAGH,CAAC,CAACI,gBAAgB;QAC9BL,IAAI,CAACM,KAAK,CAAC,CAACF,GAAG,EAAEF,GAAG,CAAC,CAAC;;MAGtBF,IAAI,GAACV,CAAC,CAACiB,QAAQ,CAACP,IAAI,EAAC;QAACQ,KAAK,EAAC;MAAK,CAAC,CAAC,CAACF,KAAK,CAACV,GAAG,CAAC;IAClD,CAAC,CAAC;EACF;;AAnBaL,eAAe,C;mBAAfA,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfrB,eAAe,C;SAAfA,eAAe;EAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}