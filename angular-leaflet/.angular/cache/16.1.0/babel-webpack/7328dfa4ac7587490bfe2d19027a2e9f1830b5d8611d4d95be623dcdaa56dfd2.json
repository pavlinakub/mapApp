{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\nexport let ControllerService = class ControllerService {\n  constructor(markerService, polylineService, clickService) {\n    this.markerService = markerService;\n    this.polylineService = polylineService;\n    this.clickService = clickService;\n  }\n  createControlPanel(map) {\n    const layerControl = L.control.layers(undefined, undefined, {\n      collapsed: false\n    }).addTo(map);\n    const markers = this.markerService.makeTransmitterMarkers(map);\n    const polyline = this.polylineService.makeRoutePolyline(map);\n    const routeMarkers = this.clickService.makeRouteMarkers(map);\n    layerControl.addOverlay(markers, \"Vysilace\");\n    layerControl.addOverlay(polyline, \"Dosah signalu\");\n    layerControl.addOverlay(routeMarkers, \"Sila prijimaneho signalu na trase\");\n    // markers.addTo(map);\n    // polyline.addTo(map);\n    // routeMarkers.addTo(map);\n    // Add additional layers or controls if needed\n  }\n};\n\nControllerService = __decorate([Injectable({\n  providedIn: 'root'\n})], ControllerService);","map":{"version":3,"names":["Injectable","L","ControllerService","constructor","markerService","polylineService","clickService","createControlPanel","map","layerControl","control","layers","undefined","collapsed","addTo","markers","makeTransmitterMarkers","polyline","makeRoutePolyline","routeMarkers","makeRouteMarkers","addOverlay","__decorate","providedIn"],"sources":["C:\\Users\\Honza\\Desktop\\OOP\\projekty\\policieProjekt\\angular-leaflet\\src\\app\\map\\controler.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MarkerService } from '../marker.service';\r\nimport { PolylineService } from './polyline.service';\r\nimport * as L from 'leaflet';\r\nimport { ClickService } from './click.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControllerService {\r\n  constructor(\r\n    private markerService: MarkerService,\r\n    private polylineService: PolylineService,\r\n    private clickService: ClickService\r\n  ) {}\r\n\r\n  createControlPanel(map: L.Map): void {\r\n    const layerControl = L.control.layers(undefined, undefined, { collapsed: false }).addTo(map);\r\n\r\n    const markers = this.markerService.makeTransmitterMarkers(map);\r\n    const polyline = this.polylineService.makeRoutePolyline(map);\r\n    const routeMarkers=this.clickService.makeRouteMarkers(map)\r\n  \r\n\r\n    layerControl.addOverlay(markers, \"Vysilace\");\r\n    layerControl.addOverlay(polyline, \"Dosah signalu\");\r\n    layerControl.addOverlay(routeMarkers,\"Sila prijimaneho signalu na trase\")\r\n    \r\n\r\n   // markers.addTo(map);\r\n   // polyline.addTo(map);\r\n   // routeMarkers.addTo(map);\r\n\r\n    // Add additional layers or controls if needed\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAG1C,OAAO,KAAKC,CAAC,MAAM,SAAS;AAMrB,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YACUC,aAA4B,EAC5BC,eAAgC,EAChCC,YAA0B;IAF1B,KAAAF,aAAa,GAAbA,aAAa;IACb,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,YAAY,GAAZA,YAAY;EACnB;EAEHC,kBAAkBA,CAACC,GAAU;IAC3B,MAAMC,YAAY,GAAGR,CAAC,CAACS,OAAO,CAACC,MAAM,CAACC,SAAS,EAAEA,SAAS,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;IAE5F,MAAMO,OAAO,GAAG,IAAI,CAACX,aAAa,CAACY,sBAAsB,CAACR,GAAG,CAAC;IAC9D,MAAMS,QAAQ,GAAG,IAAI,CAACZ,eAAe,CAACa,iBAAiB,CAACV,GAAG,CAAC;IAC5D,MAAMW,YAAY,GAAC,IAAI,CAACb,YAAY,CAACc,gBAAgB,CAACZ,GAAG,CAAC;IAG1DC,YAAY,CAACY,UAAU,CAACN,OAAO,EAAE,UAAU,CAAC;IAC5CN,YAAY,CAACY,UAAU,CAACJ,QAAQ,EAAE,eAAe,CAAC;IAClDR,YAAY,CAACY,UAAU,CAACF,YAAY,EAAC,mCAAmC,CAAC;IAG1E;IACA;IACA;IAEC;EACF;CACD;;AA1BYjB,iBAAiB,GAAAoB,UAAA,EAH7BtB,UAAU,CAAC;EACVuB,UAAU,EAAE;CACb,CAAC,C,EACWrB,iBAAiB,CA0B7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}